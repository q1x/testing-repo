zabbix_export:
  version: '7.2'
  template_groups:
  - uuid: 748ad4d098d447d492bb935c907f652f
    name: Templates/Databases
  templates:
  - uuid: 7005acc9123e4bc290805a3a16dab9cf
    template: PostgreSQL by Zabbix agent active
    name: PostgreSQL by Zabbix agent active
    description: |
      This template is designed for the deployment of PostgreSQL monitoring by Zabbix via Zabbix agent and uses user parameters to run SQL queries with the `psql` command-line tool.

      Note:
      - The template requires `pg_isready` and `psql` utilities to be installed on the same host with Zabbix agent.
      - The template requires files with SQL queries and user parameters that can be found in the Zabbix official repository:
      https://git.zabbix.com/projects/ZBX/repos/zabbix/browse/templates/db/postgresql?at=refs%2Fheads%2Frelease%2F6.0

      Setup:

      1. Deploy Zabbix agent and create the PostgreSQL user for monitoring (`<password>` at your discretion) with proper access rights to your PostgreSQL instance.

      For PostgreSQL version 10 and above:
      CREATE USER zbx_monitor WITH PASSWORD '<PASSWORD>' INHERIT;
      GRANT pg_monitor TO zbx_monitor;

      For PostgreSQL version 9.6 and below:
      CREATE USER zbx_monitor WITH PASSWORD '<PASSWORD>';
      GRANT SELECT ON pg_stat_database TO zbx_monitor;
      ALTER USER zbx_monitor WITH SUPERUSER;

      2. Copy the `postgresql/` directory to the `zabbix` user home directory - `/var/lib/zabbix/`. The `postgresql/` directory contains the files with SQL queries needed to obtain metrics from PostgreSQL instance.

      If the home directory of the `zabbix` user doesn't exist, create it first:
      mkdir -m u=rwx,g=rwx,o= -p /var/lib/zabbix
      chown zabbix:zabbix /var/lib/zabbix

      3. Copy the `template_db_postgresql.conf` file, containing user parameters, to the Zabbix agent configuration directory `/etc/zabbix/zabbix_agentd.d/` and restart Zabbix agent service.

      If you want to use SSL/TLS encryption to protect communications with the remote PostgreSQL instance, you can modify the connection string in user parameters. For example, to enable required encryption in transport mode without identity checks you could append `?sslmode=required` to the end of the connection string for all keys that use `psql`:
      UserParameter=pgsql.bgwriter[*], psql -qtAX postgresql://"$3":"$4"@"$1":"$2"/"$5"?sslmode=required -f "/var/lib/zabbix/postgresql/pgsql.bgwriter.sql"

      Consult the PostgreSQL documentation about protection modes (https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-PROTECTION) and client connection parameters (https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-SSLMODE).

      Also, it is assumed that you set up the PostgreSQL instance to work in the desired encryption mode. Check the PostgreSQL documentation (https://www.postgresql.org/docs/current/ssl-tcp.html) for details.

      4. Edit the `pg_hba.conf` configuration file to allow connections for the user `zbx_monitor`. You can check the PostgreSQL documentation for examples (https://www.postgresql.org/docs/current/auth-pg-hba-conf.html).

      5. Specify the host name or IP address in the `{$PG.HOST}` macro. Adjust the port number with `{$PG.PORT}` macro if needed.

      6. Set the password that you specified in step 1 in the macro `{$PG.PASSWORD}`.

      You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/384190-%C2%A0discussion-thread-for-official-zabbix-template-db-postgresql

      Generated by official Zabbix template tool "Templator"
    vendor:
      name: Zabbix
      version: 7.2-1
    groups:
    - name: Templates/Databases
    tags:
    - tag: class
      value: database
    - tag: target
      value: postgresql
    macros:
    - macro: '{$PG.CACHE_HITRATIO.MIN.WARN}'
      value: '90'
      description: Minimum cache hit ratio percentage for trigger expression.
    - macro: '{$PG.CHECKPOINTS_REQ.MAX.WARN}'
      value: '5'
      description: Maximum required checkpoint occurrences for trigger expression.
    - macro: '{$PG.CONFLICTS.MAX.WARN}'
      value: '0'
      description: Maximum number of recovery conflicts for trigger expression.
    - macro: '{$PG.CONN_TOTAL_PCT.MAX.WARN}'
      value: '90'
      description: Maximum percentage of current connections for trigger expression.
    - macro: '{$PG.DATABASE}'
      value: postgres
      description: Default PostgreSQL database for the connection.
    - macro: '{$PG.DEADLOCKS.MAX.WARN}'
      value: '0'
      description: Maximum number of detected deadlocks for trigger expression.
    - macro: '{$PG.FROZENXID_PCT_STOP.MIN.HIGH}'
      value: '75'
      description: Minimum frozen XID before stop percentage for trigger expression.
    - macro: '{$PG.HOST}'
      value: localhost
      description: Hostname or IP of PostgreSQL host.
    - macro: '{$PG.LLD.FILTER.DBNAME}'
      value: .+
      description: Filter of discoverable databases.
    - macro: '{$PG.LOCKS.MAX.WARN}'
      value: '100'
      description: Maximum number of locks for trigger expression.
    - macro: '{$PG.PASSWORD}'
      value: <Put the password here>
      description: PostgreSQL user password.
    - macro: '{$PG.PING_TIME.MAX.WARN}'
      value: 1s
      description: Maximum time of connection response for trigger expression.
    - macro: '{$PG.PORT}'
      value: '5432'
      description: PostgreSQL service port.
    - macro: '{$PG.QUERY_ETIME.MAX.WARN}'
      value: '30'
      description: Execution time limit for count of slow queries.
    - macro: '{$PG.REPL_LAG.MAX.WARN}'
      value: 10m
      description: Maximum replication lag time for trigger expression.
    - macro: '{$PG.SLOW_QUERIES.MAX.WARN}'
      value: '5'
      description: Slow queries count threshold for a trigger.
    - macro: '{$PG.USER}'
      value: zbx_monitor
      description: PostgreSQL username.
