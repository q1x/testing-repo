zabbix_export:
  version: '7.2'
  template_groups:
  - uuid: 748ad4d098d447d492bb935c907f652f
    name: Templates/Databases
  templates:
  - uuid: 95f2053c21094ad4968440b562cc7ea2
    template: ClickHouse by HTTP
    name: ClickHouse by HTTP
    description: |
      This template is designed for the effortless deployment of ClickHouse monitoring by Zabbix via HTTP and doesn't require any external scripts.

      Setup:

      1. Create a user to monitor the service. For example, you could create a file '/etc/clickhouse-server/users.d/zabbix.xml' with the following content:

      <yandex>
        <users>
          <zabbix>
            <password>zabbix_pass</password>
            <networks incl="networks" />
            <profile>web</profile>
            <quota>default</quota>
            <allow_databases>
              <database>test</database>
            </allow_databases>
          </zabbix>
        </users>
      </yandex>

      2. Set the hostname or IP address of the ClickHouse HTTP endpoint in the '{$CLICKHOUSE.HOST}' macro. You can also change the port in the '{$CLICKHOUSE.PORT}' macro and scheme in the '{$CLICKHOUSE.SCHEME}' macro if necessary.

      3. Set the login and password in the macros '{$CLICKHOUSE.USER}' and '{$CLICKHOUSE.PASSWORD}'. If you don't need an authentication - remove headers from HTTP-Agent type items.

      Generated by official Zabbix template tool "Templator"
    vendor:
      name: Zabbix
      version: 7.2-1
    groups:
    - name: Templates/Databases
    tags:
    - tag: class
      value: database
    - tag: target
      value: clickhouse
    macros:
    - macro: '{$CLICKHOUSE.DELAYED.FILES.DISTRIBUTED.COUNT.MAX.WARN}'
      value: '600'
      description: Maximum size of distributed files queue to insert for trigger expression.
    - macro: '{$CLICKHOUSE.DELAYED.INSERTS.MAX.WARN}'
      value: '0'
      description: Maximum number of delayed inserts for trigger expression.
    - macro: '{$CLICKHOUSE.HOST}'
      value: <SET CLICKHOUSE HOST>
      description: The hostname or IP address of the ClickHouse HTTP endpoint.
    - macro: '{$CLICKHOUSE.LLD.FILTER.DB.MATCHES}'
      value: .*
      description: Filter of discoverable databases
    - macro: '{$CLICKHOUSE.LLD.FILTER.DB.NOT_MATCHES}'
      value: CHANGE_IF_NEEDED
      description: Filter to exclude discovered databases
    - macro: '{$CLICKHOUSE.LLD.FILTER.DICT.MATCHES}'
      value: .*
      description: Filter of discoverable dictionaries
    - macro: '{$CLICKHOUSE.LLD.FILTER.DICT.NOT_MATCHES}'
      value: CHANGE_IF_NEEDED
      description: Filter to exclude discovered dictionaries
    - macro: '{$CLICKHOUSE.LLD.FILTER.TABLE.MATCHES}'
      value: .*
      description: Filter of discoverable tables
    - macro: '{$CLICKHOUSE.LLD.FILTER.TABLE.NOT_MATCHES}'
      value: CHANGE_IF_NEEDED
      description: Filter to exclude discovered tables
    - macro: '{$CLICKHOUSE.LOG_POSITION.DIFF.MAX.WARN}'
      value: '30'
      description: Maximum diff between log_pointer and log_max_index.
    - macro: '{$CLICKHOUSE.NETWORK.ERRORS.MAX.WARN}'
      value: '5'
      description: Maximum number of network errors for trigger expression
    - macro: '{$CLICKHOUSE.PARTS.PER.PARTITION.WARN}'
      value: '300'
      description: Maximum number of parts per partition for trigger expression.
    - macro: '{$CLICKHOUSE.PASSWORD}'
      value: zabbix_pass
    - macro: '{$CLICKHOUSE.PORT}'
      value: '8123'
      description: The port of ClickHouse HTTP endpoint
    - macro: '{$CLICKHOUSE.QUERY_TIME.MAX.WARN}'
      value: '600'
      description: Maximum ClickHouse query time in seconds for trigger expression
    - macro: '{$CLICKHOUSE.QUEUE.SIZE.MAX.WARN}'
      value: '20'
      description: Maximum size of the queue for operations waiting to be performed
        for trigger expression.
    - macro: '{$CLICKHOUSE.REPLICA.MAX.WARN}'
      value: '600'
      description: Replication lag across all tables for trigger expression.
    - macro: '{$CLICKHOUSE.SCHEME}'
      value: http
      description: Request scheme which may be http or https
    - macro: '{$CLICKHOUSE.USER}'
      value: zabbix
